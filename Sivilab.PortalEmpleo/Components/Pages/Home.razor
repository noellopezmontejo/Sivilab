@page "/"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Web
@inject NavigationManager Navigation

<div class="nav-links">
    <a href="#">Inicio</a>
    <a href="#ofertas">Ofertas</a>
    <a href="#eventos">Eventos</a>
    <a href="#programas">Programas</a>
</div>

<section class="main-banner">
    <h2>PORTAL DEL EMPLEO</h2>
    <p>Encuentra empleo, cursos o participa en eventos laborales. ¡Elige tu futuro hoy!</p>

    <EditForm Model="@searchModel" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="search-box-wrapper">
            <div class="search-box">
                <InputText @bind-Value="searchModel.SearchTerm"
                           class="search-input"
                           placeholder="Buscar empleos por palabra clave, categoría o lugar..." />
                <button type="submit" class="search-button">
                    Buscar
                </button>
            </div>
            <div class="captcha-check">
                <input type="checkbox"
                       @onchange="OnCaptchaCheckChanged"
                       checked="@searchModel.CaptchaChecked" />
                <label class="@(captchaVerified ? "captcha-verified" : "")">
                    @(captchaVerified ? "✓ Verificado como humano" : "Soy humano")
                </label>
                <ValidationMessage For="@(() => searchModel.CaptchaChecked)" />
            </div>
        </div>
    </EditForm>
</section>

<!-- Modal del Captcha -->
@if (showCaptchaModal)
{
    <div class="captcha-modal">
        <div class="captcha-modal-content">
            <h3>Verificación Humana</h3>
            <p>Resuelve la siguiente operación para continuar:</p>

            <div class="captcha-question">
                @num1 + @num2 = ?
            </div>

            <input type="number"
                   @bind="captchaAnswer"
                   @onkeypress="HandleCaptchaKeyPress"
                   class="captcha-input"
                   placeholder="?"
                   min="0" />

            @if (!string.IsNullOrEmpty(captchaMessage))
            {
                <div class="@(captchaError ? "captcha-error" : "captcha-success")">
                    @captchaMessage
                </div>
            }

            <div class="captcha-buttons">
                <button class="captcha-btn captcha-btn-verify" @onclick="VerifyCaptcha">
                    Verificar
                </button>
                <button class="captcha-btn captcha-btn-cancel" @onclick="CancelCaptcha">
                    Cancelar
                </button>
            </div>
        </div>
    </div>
}

<section id="categorias">
    <h3 style="text-align: center; margin-top: 2rem;">Buscar trabajos por categorías principales</h3>
    <div class="categoria-grid-modern">
        @foreach (var categoria in categorias)
        {
            <div class="categoria-box">
                <div class="categoria-img">
                    <img src="@categoria.ImageUrl" alt="@categoria.Titulo" />
                </div>
                <div class="categoria-text">
                    <h4>@categoria.Titulo</h4>
                    <p><strong>@categoria.Puestos</strong> Puestos de Trabajo Disponibles</p>
                    <NavLink class="explora-link" href="@($"/categoria/{Uri.EscapeDataString(categoria.Titulo)}")">
                        Explora los trabajos &gt;
                    </NavLink>
                </div>
            </div>
        }
    </div>
</section>

<!-- SECCIÓN DE OFERTAS CON CARRUSEL COMPLETO -->
<section id="ofertas">
    <h3>Ofertas de empleo actuales</h3>

    <div class="carousel-container">
        <div class="carousel-wrapper">
            <div class="carousel-slides" id="carouselSlides">
                @for (int i = 0; i < ofertas.Count; i++)
                {
                    var oferta = ofertas[i];
                    <div class="carousel-slide @(i == 0 ? "active" : "")">
                        <div class="carousel-content">
                            <div class="carousel-left">
                                <img src="@oferta.ImageURL" alt="@oferta.OfferName" />
                            </div>
                            <div class="carousel-right">
                                <h2>@oferta.OfferName</h2>
                                <p>@oferta.Description</p>
                                <p class="detalle">
                                    <strong>Experiencia:</strong> @oferta.Experience años<br />
                                    <strong>Salario:</strong> $@oferta.Salary MXN
                                </p>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!-- Flechas de navegación -->
            <button class="carousel-btn carousel-btn-prev" onclick="changeSlide(-1)">‹</button>
            <button class="carousel-btn carousel-btn-next" onclick="changeSlide(1)">›</button>

            <!-- Indicadores -->
            <div class="carousel-indicators">
                @for (int i = 0; i < ofertas.Count; i++)
                {
                    <button class="indicator @(i == 0 ? "active" : "")" onclick="goToSlide(@i)"></button>
                }
            </div>
        </div>
    </div>
</section>

<section id="eventos">
    <h3 style="text-align: center; margin-top: 2rem;">Próximos eventos</h3>
    <div class="cards">
        @foreach (var evento in eventos)
        {
            <div class="card">
                <img src="@evento.ImageURL" alt="@evento.EventName" />
                <div class="card-content">
                    <h4>@evento.EventName</h4>
                    <p>@evento.Description</p>
                    <p><strong>Fecha:</strong> @evento.EventDate</p>
                </div>
            </div>
        }
    </div>
</section>

<section id="programas">
    <h3 style="text-align: center; margin-top: 2rem;">Programas de formación</h3>
    <div class="cards">
        <div class="card">
            <img src="https://marketingdigitalexperience.com/wp-content/uploads/2021/09/curso-de-marketing-digital-MDE.jpg" alt="Programa 1">
            <div class="card-content">
                <h4>Curso de Marketing Digital</h4>
                <p>Domina herramientas y estrategias clave para destacar en marketing online.</p>
            </div>
        </div>
        <div class="card">
            <img src="https://images.unsplash.com/photo-1521791136064-7986c2920216" alt="Programa 2">
            <div class="card-content">
                <h4>Bootcamp de Programación</h4>
                <p>Aprende a desarrollar aplicaciones web desde cero en pocos meses.</p>
            </div>
        </div>
        <div class="card">
            <img src="https://images.unsplash.com/photo-1573164713988-8665fc963095" alt="Programa 3">
            <div class="card-content">
                <h4>Programa de Liderazgo</h4>
                <p>Mejora tus habilidades directivas para liderar equipos exitosos.</p>
            </div>
        </div>
    </div>
</section>

<footer>
    &copy; 2025 Portal de Empleo - Todos los derechos reservados.
</footer>

<!-- JAVASCRIPT DEL CARRUSEL -->
<script>
    let currentSlide = 0;
    const totalSlides = @ofertas.Count;
    let autoSlideInterval;

    function updateCarousel() {
        const slidesContainer = document.getElementById('carouselSlides');
        const indicators = document.querySelectorAll('.indicator');

        if (slidesContainer) {
            slidesContainer.style.transform = `translateX(-${currentSlide * (100 / totalSlides)}%)`;
        }

        indicators.forEach((indicator, index) => {
            indicator.classList.toggle('active', index === currentSlide);
        });
    }

    function changeSlide(direction) {
        currentSlide += direction;

        if (currentSlide >= totalSlides) {
            currentSlide = 0;
        } else if (currentSlide < 0) {
            currentSlide = totalSlides - 1;
        }

        updateCarousel();
        restartAutoSlide();
    }

    function goToSlide(index) {
        currentSlide = index;
        updateCarousel();
        restartAutoSlide();
    }

    function startAutoSlide() {
        autoSlideInterval = setInterval(() => {
            changeSlide(1);
        }, 4000);
    }

    function restartAutoSlide() {
        clearInterval(autoSlideInterval);
        startAutoSlide();
    }

    window.addEventListener('load', () => {
        setTimeout(startAutoSlide, 1000);
    });

    document.addEventListener('DOMContentLoaded', () => {
        const carousel = document.querySelector('.carousel-wrapper');
        if (carousel) {
            carousel.addEventListener('mouseenter', () => clearInterval(autoSlideInterval));
            carousel.addEventListener('mouseleave', startAutoSlide);
        }
    });
</script>

@code {
    private SearchModel searchModel = new();
    private List<EventoModel> eventos = new();
    private List<OfertaModel> ofertas = new();

    // Variables para el captcha
    private bool showCaptchaModal = false;
    private bool captchaVerified = false;
    private int num1 = 0;
    private int num2 = 0;
    private int captchaAnswer = 0;
    private string captchaMessage = "";
    private bool captchaError = false;

    protected override void OnInitialized()
    {
        eventos = new List<EventoModel>
        {
            new EventoModel {
                EventName = "Feria del Empleo",
                Description = "Conoce a empresas líderes y presenta tu currículum en este gran evento.",
                EventDate = "15/Nov/2025",
                ImageURL = "https://images.unsplash.com/photo-1522071820081-009f0129c71c"
            },
            new EventoModel {
                EventName = "Taller de Entrevistas",
                Description = "Aprende a destacar en entrevistas laborales con consejos de expertos.",
                EventDate = "19/Ago/2025",
                ImageURL = "https://images.unsplash.com/photo-1543269865-cbf427effbad"
            },
            new EventoModel {
                EventName = "Webinar de Emprendimiento",
                Description = "Inspírate con historias de éxito y consejos para emprender tu propio negocio.",
                EventDate = "01/Dic/2025",
                ImageURL = "https://images.unsplash.com/photo-1533750349088-cd871a92f312"
            }
        };

        ofertas = new List<OfertaModel>
        {
            new OfertaModel {
                OfferName = "Desarrollador Web",
                Description = "Empresa ABC busca desarrollador Frontend con experiencia en HTML, CSS y JavaScript.",
                ImageURL = "https://images.unsplash.com/photo-1504384308090-c894fdcc538d",
                Experience = 3,
                Salary = 5000.00
            },
            new OfertaModel {
                OfferName = "Diseñador Gráfico",
                Description = "Agencia Creativa necesita diseñador con buen manejo de Illustrator y Photoshop.",
                ImageURL = "https://images.unsplash.com/photo-1551836022-d5d88e9218df",
                Experience = 2,
                Salary = 4500.00
            },
            new OfertaModel {
                OfferName = "Analista de Datos",
                Description = "Empresa de tecnología busca experto en análisis de datos para su equipo.",
                ImageURL = "https://images.unsplash.com/photo-1460925895917-afdab827c52f",
                Experience = 4,
                Salary = 6000.00
            }
        };

        GenerateCaptcha();
    }

    private void OnCaptchaCheckChanged(ChangeEventArgs e)
    {
        bool isChecked = e.Value as bool? ?? false;

        if (isChecked && !captchaVerified)
        {
            // Mostrar modal del captcha
            GenerateCaptcha();
            showCaptchaModal = true;
            captchaMessage = "";
            captchaAnswer = 0;
        }
        else if (!isChecked)
        {
            // Si desmarca, resetear verificación
            captchaVerified = false;
            searchModel.CaptchaChecked = false;
        }
        StateHasChanged();
    }

    private void GenerateCaptcha()
    {
        Random random = new Random();
        num1 = random.Next(1, 21); // Números del 1 al 20
        num2 = random.Next(1, 21);
    }

    private void HandleCaptchaKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            VerifyCaptcha();
        }
    }

    private void VerifyCaptcha()
    {
        int correctAnswer = num1 + num2;

        if (captchaAnswer == correctAnswer)
        {
            captchaVerified = true;
            searchModel.CaptchaChecked = true;
            captchaMessage = "¡Correcto! Verificación completada.";
            captchaError = false;

            // Cerrar modal después de un breve delay
            Task.Delay(1000).ContinueWith(_ =>
            {
                InvokeAsync(() =>
                {
                    showCaptchaModal = false;
                    StateHasChanged();
                });
            });
        }
        else
        {
            captchaError = true;
            captchaMessage = $"Respuesta incorrecta. {num1} + {num2} = {correctAnswer}";
            GenerateCaptcha(); // Generar nueva operación
            captchaAnswer = 0;
        }

        StateHasChanged();
    }

    private void CancelCaptcha()
    {
        showCaptchaModal = false;
        captchaVerified = false;
        searchModel.CaptchaChecked = false;
        captchaMessage = "";
        captchaAnswer = 0;
        StateHasChanged();
    }

    private void HandleValidSubmit()
    {
        if (!string.IsNullOrWhiteSpace(searchModel.SearchTerm) && searchModel.CaptchaChecked && captchaVerified)
        {
            var url = $"/portal-empleo?busqueda={Uri.EscapeDataString(searchModel.SearchTerm)}";
            Navigation.NavigateTo(url);
        }
    }

    public class SearchModel
    {
        [Required(ErrorMessage = "Este campo es obligatorio")]
        public string SearchTerm { get; set; } = string.Empty;

        [Range(typeof(bool), "true", "true", ErrorMessage = "Debes completar la verificación humana")]
        public bool CaptchaChecked { get; set; }
    }

    public class EventoModel
    {
        public string EventName { get; set; } = string.Empty;
        public string Description { get; set; } = string.Empty;
        public string EventDate { get; set; } = string.Empty;
        public string ImageURL { get; set; } = string.Empty;
    }

    public class OfertaModel
    {
        public string OfferName { get; set; } = string.Empty;
        public string Description { get; set; } = string.Empty;
        public string ImageURL { get; set; } = string.Empty;
        public int Experience { get; set; }
        public double Salary { get; set; }
    }

    private List<CategoriaModel> categorias = new()
    {
        new CategoriaModel { Titulo = "Desarrollo de Negocios", Puestos = 120, ImageUrl = "https://i.pinimg.com/1200x/1a/c9/25/1ac9253ba4768ccb45a1ef2d33ceb729.jpg" },
        new CategoriaModel { Titulo = "Atención al Cliente", Puestos = 370, ImageUrl = "https://i.pinimg.com/1200x/63/81/0d/63810d6fa154fbc0619ed63a804be28e.jpg" },
        new CategoriaModel { Titulo = "Marketing", Puestos = 743, ImageUrl = "https://i.pinimg.com/736x/f9/47/45/f94745921e7e5690f8de02aca6a353b7.jpg" },
        new CategoriaModel { Titulo = "Gestión de Producto", Puestos = 156, ImageUrl = "https://i.pinimg.com/736x/8b/6f/d1/8b6fd1da7cb3f0b7e9f7bceb5dd3a05d.jpg" },
        new CategoriaModel { Titulo = "Contabilidad", Puestos = 67, ImageUrl = "https://i.pinimg.com/1200x/b5/84/95/b5849532f8d1d05aaec70fb9d94b2739.jpg" },
        new CategoriaModel { Titulo = "Soporte Técnico", Puestos = 140, ImageUrl = "https://i.pinimg.com/736x/2d/e8/ee/2de8eee50ae28888289fd67b920895a0.jpg" },
        new CategoriaModel { Titulo = "Recursos Humanos", Puestos = 245, ImageUrl = "https://i.pinimg.com/1200x/91/03/0e/91030ef9d1686f97802c1840381ce2b8.jpg" },
        new CategoriaModel { Titulo = "Tecnología y Sistemas", Puestos = 189, ImageUrl = "https://i.pinimg.com/736x/90/56/d3/9056d37cff0fcead7492b2a4fb4b01cf.jpg" }
    };

    public class CategoriaModel
    {
        public string Titulo { get; set; } = string.Empty;
        public int Puestos { get; set; }
        public string ImageUrl { get; set; } = string.Empty;
    }
}