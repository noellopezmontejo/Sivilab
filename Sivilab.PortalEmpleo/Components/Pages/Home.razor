@page "/"
@using System.ComponentModel.DataAnnotations
@inject NavigationManager Navigation

<style>
    @@import url('https://fonts.googleapis.com/css2?family=Noto+Sans&family=Patria&display=swap');

    :root {
        --gray-800: #235B4E;
        --gray-100: #f3f4f6;
        --gray-300: #d1d5db;
        --gray-500: #6b7280;
        --primary-color: #235B4E;
        --secondary-color: #BC955C;
        --bg-light: var(--gray-100);
        --text-dark: var(--gray-800);
        --text-light: #ffffff;
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Noto Sans', sans-serif;
    }

    h1, h2, h3 {
        font-family: 'Patria', sans-serif;
    }

    body {
        background-color: var(--bg-light);
        color: var(--text-dark);
    }

    header {
        background-color: var(--gray-800);
        color: var(--text-light);
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem 2rem;
    }

    .nav-links {
        background-color: #BC955C;
        display: flex;
        justify-content: center;
        gap: 1rem;
        padding: 0.5rem 0;
    }

        .nav-links a {
            color: var(--text-light);
            text-decoration: none;
            font-size: 0.9rem;
            transition: color 0.3s;
        }

            .nav-links a:hover {
                color: var(--primary-color);
            }

    .main-banner {
        background: linear-gradient(135deg, var(--gray-800), #235B4E);
        color: var(--text-light);
        text-align: center;
        padding: 5rem 1rem 3rem;
    }

        .main-banner h2 {
            font-size: 2.5rem;
            font-weight: bold;
        }

        .main-banner p {
            font-size: 1.2rem;
            margin-top: 1rem;
        }

    .search-form {
        background-color: #fff;
        max-width: 900px;
        margin: 2rem auto;
        padding: 1.5rem;
        border-radius: 10px;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
    }

        .search-form .fields {
            display: flex;
            flex-direction: column;
            gap: 1rem;
            margin-bottom: 1rem;
        }

        .search-form input[type="text"] {
            padding: 1rem;
            border: 1px solid var(--gray-300);
            border-radius: 6px;
            font-size: 1rem;
            outline: none;
            transition: border-color 0.3s, box-shadow 0.3s;
        }

            .search-form input[type="text"]:focus {
                border-color: var(--primary-color);
                box-shadow: 0 0 5px rgba(59, 130, 246, 0.3);
            }

    .captcha {
        display: flex;
        align-items: center;
        font-size: 0.9rem;
        margin-bottom: 1rem;
        color: var(--gray-500);
        gap: 0.5rem;
    }

    .search-form button {
        background-color: var(--secondary-color);
        color: white;
        padding: 0.8rem 1.5rem;
        border: none;
        border-radius: 6px;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: background 0.3s, transform 0.2s, color 0.3s;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .search-form button:hover {
            background-color: var(--primary-color);
            color: white;
        }

    .carousel-container {
        overflow-x: auto;
        white-space: nowrap;
        padding: 1rem 0;
    }

    .carousel-slide {
        display: flex;
        gap: 1rem;
    }

    .carousel-item {
        background: #fff;
        border: 1px solid #ccc;
        border-radius: 8px;
        min-width: 280px;
        max-width: 300px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
    }

    .carousel-image {
        height: 160px;
        background-size: cover;
        background-position: center;
        border-top-left-radius: 8px;
        border-top-right-radius: 8px;
    }

    .carousel-content {
        padding: 1rem;
    }

    .cards {
        display: flex;
        flex-wrap: wrap;
        gap: 1.5rem;
        justify-content: center;
    }

    .card {
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 4px 10px rgba(0,0,0,0.1);
        max-width: 300px;
        width: 100%;
        overflow: hidden;
    }

        .card img {
            width: 100%;
            height: 200px;
            object-fit: cover;
        }

    .card-content {
        padding: 1rem;
    }

    footer {
        background-color: var(--gray-800);
        color: #ccc;
        text-align: center;
        padding: 1rem;
        font-size: 0.85rem;
    }

    .categoria-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
        gap: 1rem;
        padding: 2rem 1rem;
    }

    .categoria-card {
        background-color: var(--primary-color);
        color: white;
        padding: 1.5rem;
        border-radius: 12px;
        cursor: pointer;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s ease;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

        .categoria-card:hover {
            transform: translateY(-4px);
            background-color: #1d4e45;
        }

    @@media (max-width: 600px) {
        .categoria-grid {
            grid-template-columns: 1fr;
        }
    }

    .categoria-grid-modern {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(340px, 1fr));
        gap: 1.5rem;
        padding: 2rem 1rem;
    }

    .categoria-box {
        background-color: #fff;
        display: flex;
        gap: 1rem;
        align-items: center;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        overflow: hidden;
        transition: transform 0.2s ease-in-out;
        padding: 1rem;
    }

        .categoria-box:hover {
            transform: translateY(-4px);
        }

    .categoria-img img {
        width: 100px;
        height: 100px;
        object-fit: cover;
        border-radius: 8px;
    }

    .categoria-text h4 {
        font-size: 1.1rem;
        margin-bottom: 0.25rem;
    }

    .categoria-text p {
        margin: 0.25rem 0;
        color: var(--gray-500);
        font-size: 0.95rem;
    }

    .explora-link {
        color: #BC955C;
        text-decoration: none;
        font-weight: 500;
        font-size: 0.95rem;
    }

        .explora-link:hover {
            text-decoration: underline;
        }

    .search-box-wrapper {
        max-width: 800px;
        margin: 2rem auto;
        background: #ffffff;
        padding: 1.5rem;
        border-radius: 12px;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.05);
    }

    .search-box {
        display: flex;
        flex-direction: row;
        gap: 1rem;
        align-items: center;
        justify-content: center;
    }

    .search-input {
        flex: 1;
        padding: 0.9rem 1rem;
        border: 1px solid var(--gray-300);
        border-radius: 6px;
        font-size: 1rem;
        outline: none;
        transition: border 0.3s, box-shadow 0.3s;
    }

        .search-input:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 5px rgba(35, 91, 78, 0.3);
        }

    .search-button {
        background-color: #235B4E;
        color: white;
        border: none;
        padding: 0.9rem 1.5rem;
        font-size: 1rem;
        border-radius: 6px;
        font-weight: 600;
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: background-color 0.3s ease;
    }

        .search-button:hover {
            background-color: #BC955C;
        }

    .search-icon {
        font-size: 1.2rem;
    }

    .captcha-check {
        margin-top: 1rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: var(--gray-500);
    }

    /* Estilos para el modal del captcha */
    .captcha-modal {
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        animation: fadeIn 0.3s;
    }

    .captcha-modal-content {
        background-color: #fff;
        padding: 2rem;
        border-radius: 12px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        text-align: center;
        min-width: 320px;
        animation: slideIn 0.3s;
    }

    .captcha-question {
        font-size: 1.5rem;
        margin-bottom: 1rem;
        color: var(--primary-color);
        font-weight: bold;
    }

    .captcha-input {
        padding: 0.8rem;
        border: 2px solid var(--gray-300);
        border-radius: 6px;
        font-size: 1.1rem;
        width: 120px;
        text-align: center;
        margin: 0 0.5rem;
    }

        .captcha-input:focus {
            border-color: var(--primary-color);
            outline: none;
        }

    .captcha-buttons {
        margin-top: 1.5rem;
        display: flex;
        gap: 1rem;
        justify-content: center;
    }

    .captcha-btn {
        padding: 0.8rem 1.5rem;
        border: none;
        border-radius: 6px;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .captcha-btn-verify {
        background-color: var(--primary-color);
        color: white;
    }

        .captcha-btn-verify:hover {
            background-color: #1d4e45;
        }

    .captcha-btn-cancel {
        background-color: var(--gray-300);
        color: var(--gray-800);
    }

        .captcha-btn-cancel:hover {
            background-color: var(--gray-500);
            color: white;
        }

    .captcha-error {
        color: #dc3545;
        margin-top: 0.5rem;
        font-size: 0.9rem;
    }

    .captcha-success {
        color: #28a745;
        margin-top: 0.5rem;
        font-size: 0.9rem;
    }

    .captcha-verified {
        color: #28a745;
        font-weight: bold;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
        }

        to {
            opacity: 1;
        }
    }

    @@keyframes slideIn {
        from {
            transform: translateY(-50px);
            opacity: 0;
        }

        to {
            transform: translateY(0);
            opacity: 1;
        }
    }
</style>

<div class="nav-links">
    <a href="#">Inicio</a>
    <a href="#ofertas">Ofertas</a>
    <a href="#eventos">Eventos</a>
    <a href="#programas">Programas</a>
</div>

<section class="main-banner">
    <h2>PORTAL DEL EMPLEO</h2>
    <p>Encuentra empleo, cursos o participa en eventos laborales. ¡Elige tu futuro hoy!</p>

    <EditForm Model="@searchModel" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="search-box-wrapper">
            <div class="search-box">
                <InputText @bind-Value="searchModel.SearchTerm"
                           class="search-input"
                           placeholder="Buscar empleos por palabra clave, categoría o lugar..." />
                <button type="submit" class="search-button">
                    Buscar
                </button>
            </div>
            <div class="captcha-check">
                <input type="checkbox"
                       @onchange="OnCaptchaCheckChanged"
                       checked="@searchModel.CaptchaChecked" />
                <label class="@(captchaVerified ? "captcha-verified" : "")">
                    @(captchaVerified ? "✓ Verificado como humano" : "Soy humano")
                </label>
                <ValidationMessage For="@(() => searchModel.CaptchaChecked)" />
            </div>
        </div>
    </EditForm>
</section>

<!-- Modal del Captcha -->
@if (showCaptchaModal)
{
    <div class="captcha-modal">
        <div class="captcha-modal-content">
            <h3>Verificación Humana</h3>
            <p>Resuelve la siguiente operación para continuar:</p>

            <div class="captcha-question">
                @num1 + @num2 = ?
            </div>

            <input type="number"
       @bind="captchaAnswer"
       @onkeypress="HandleCaptchaKeyPress"
       class="captcha-input"
       placeholder="?"
       min="0" />

            @if (!string.IsNullOrEmpty(captchaMessage))
            {
                <div class="@(captchaError ? "captcha-error" : "captcha-success")">
                    @captchaMessage
                </div>
            }

            <div class="captcha-buttons">
                <button class="captcha-btn captcha-btn-verify" @onclick="VerifyCaptcha">
                    Verificar
                </button>
                <button class="captcha-btn captcha-btn-cancel" @onclick="CancelCaptcha">
                    Cancelar
                </button>
            </div>
        </div>
    </div>
}

<section id="categorias">
    <h3 style="text-align: center; margin-top: 2rem;">Buscar trabajos por categorías principales</h3>
    <div class="categoria-grid-modern">
        @foreach (var categoria in categorias)
        {
            <div class="categoria-box">
                <div class="categoria-img">
                    <img src="@categoria.ImageUrl" alt="@categoria.Titulo" />
                </div>
                <div class="categoria-text">
                    <h4>@categoria.Titulo</h4>
                    <p><strong>@categoria.Puestos</strong> Puestos de Trabajo Disponibles</p>
                    <NavLink class="explora-link" href="@($"/categoria/{Uri.EscapeDataString(categoria.Titulo)}")">
                        Explora los trabajos &gt;
                    </NavLink>
                </div>
            </div>
        }
    </div>
</section>

<section id="ofertas">
    <h3 style="text-align: center; margin-top: 2rem;">Ofertas de empleo actuales</h3>
    <div class="carousel-container">
        <div class="carousel-slide">
            @foreach (var oferta in ofertas)
            {
                <div class="carousel-item">
                    <div class="carousel-image" style="background-image: url('@oferta.ImageURL');"></div>
                    <div class="carousel-content">
                        <h4>@oferta.OfferName</h4>
                        <p>@oferta.Description</p>
                        <p><strong>Experiencia:</strong> @oferta.Experience años</p>
                        <p><strong>Salario:</strong> $@oferta.Salary MXN</p>
                    </div>
                </div>
            }
        </div>
    </div>
</section>

<section id="eventos">
    <h3 style="text-align: center; margin-top: 2rem;">Próximos eventos</h3>
    <div class="cards">
        @foreach (var evento in eventos)
        {
            <div class="card">
                <img src="@evento.ImageURL" alt="@evento.EventName" />
                <div class="card-content">
                    <h4>@evento.EventName</h4>
                    <p>@evento.Description</p>
                    <p><strong>Fecha:</strong> @evento.EventDate</p>
                </div>
            </div>
        }
    </div>
</section>

<section id="programas">
    <h3 style="text-align: center; margin-top: 2rem;">Programas de formación</h3>
    <div class="cards">
        <div class="card">
            <img src="https://marketingdigitalexperience.com/wp-content/uploads/2021/09/curso-de-marketing-digital-MDE.jpg" alt="Programa 1">
            <div class="card-content">
                <h4>Curso de Marketing Digital</h4>
                <p>Domina herramientas y estrategias clave para destacar en marketing online.</p>
            </div>
        </div>
        <div class="card">
            <img src="https://images.unsplash.com/photo-1521791136064-7986c2920216" alt="Programa 2">
            <div class="card-content">
                <h4>Bootcamp de Programación</h4>
                <p>Aprende a desarrollar aplicaciones web desde cero en pocos meses.</p>
            </div>
        </div>
        <div class="card">
            <img src="https://images.unsplash.com/photo-1573164713988-8665fc963095" alt="Programa 3">
            <div class="card-content">
                <h4>Programa de Liderazgo</h4>
                <p>Mejora tus habilidades directivas para liderar equipos exitosos.</p>
            </div>
        </div>
    </div>
</section>

<footer>
    &copy; 2025 Portal de Empleo - Todos los derechos reservados.
</footer>

@code {
    private SearchModel searchModel = new();
    private List<EventoModel> eventos = new();
    private List<OfertaModel> ofertas = new();

    // Variables para el captcha
    private bool showCaptchaModal = false;
    private bool captchaVerified = false;
    private int num1 = 0;
    private int num2 = 0;
    private int captchaAnswer = 0;
    private string captchaMessage = "";
    private bool captchaError = false;

    protected override void OnInitialized()
    {
        eventos = new List<EventoModel>
        {
            new EventoModel {
                EventName = "Feria del Empleo",
                Description = "Conoce a empresas líderes y presenta tu currículum en este gran evento.",
                EventDate = "15/Nov/2025",
                ImageURL = "https://images.unsplash.com/photo-1522071820081-009f0129c71c"
            },
            new EventoModel {
                EventName = "Taller de Entrevistas",
                Description = "Aprende a destacar en entrevistas laborales con consejos de expertos.",
                EventDate = "19/Ago/2025",
                ImageURL = "https://images.unsplash.com/photo-1543269865-cbf427effbad"
            },
            new EventoModel {
                EventName = "Webinar de Emprendimiento",
                Description = "Inspírate con historias de éxito y consejos para emprender tu propio negocio.",
                EventDate = "01/Dic/2025",
                ImageURL = "https://images.unsplash.com/photo-1533750349088-cd871a92f312"
            }
        };

        ofertas = new List<OfertaModel>
        {
            new OfertaModel {
                OfferName = "Desarrollador Web",
                Description = "Empresa ABC busca desarrollador Frontend con experiencia en HTML, CSS y JavaScript.",
                ImageURL = "https://images.unsplash.com/photo-1504384308090-c894fdcc538d",
                Experience = 3,
                Salary = 5000.00
            },
            new OfertaModel {
                OfferName = "Diseñador Gráfico",
                Description = "Agencia Creativa necesita diseñador con buen manejo de Illustrator y Photoshop.",
                ImageURL = "https://images.unsplash.com/photo-1551836022-d5d88e9218df",
                Experience = 2,
                Salary = 4500.00
            },
            new OfertaModel {
                OfferName = "Analista de Datos",
                Description = "Empresa de tecnología busca experto en análisis de datos para su equipo.",
                ImageURL = "https://images.unsplash.com/photo-1504384308090-c894fdcc538d",
                Experience = 4,
                Salary = 6000.00
            }
        };

        GenerateCaptcha();
    }

    private void OnCaptchaCheckChanged(ChangeEventArgs e)
    {
        bool isChecked = e.Value as bool? ?? false;

        if (isChecked && !captchaVerified)
        {
            // Mostrar modal del captcha
            GenerateCaptcha();
            showCaptchaModal = true;
            captchaMessage = "";
            captchaAnswer = 0;
        }
        else if (!isChecked)
        {
            // Si desmarca, resetear verificación
            captchaVerified = false;
            searchModel.CaptchaChecked = false;
        }
        StateHasChanged();
    }

    private void GenerateCaptcha()
    {
        Random random = new Random();
        num1 = random.Next(1, 21); // Números del 1 al 20
        num2 = random.Next(1, 21);
    }

    private void HandleCaptchaKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            VerifyCaptcha();
        }
    }

    private void VerifyCaptcha()
    {
        int correctAnswer = num1 + num2;

        if (captchaAnswer == correctAnswer)
        {
            captchaVerified = true;
            searchModel.CaptchaChecked = true;
            captchaMessage = "¡Correcto! Verificación completada.";
            captchaError = false;

            // Cerrar modal después de un breve delay
            Task.Delay(1000).ContinueWith(_ =>
            {
                InvokeAsync(() =>
                {
                    showCaptchaModal = false;
                    StateHasChanged();
                });
            });
        }
        else
        {
            captchaError = true;
            captchaMessage = $"Respuesta incorrecta. {num1} + {num2} = {correctAnswer}";
            GenerateCaptcha(); // Generar nueva operación
            captchaAnswer = 0;
        }

        StateHasChanged();
    }

    private void CancelCaptcha()
    {
        showCaptchaModal = false;
        captchaVerified = false;
        searchModel.CaptchaChecked = false;
        captchaMessage = "";
        captchaAnswer = 0;
        StateHasChanged();
    }

    private void HandleValidSubmit()
    {
        if (!string.IsNullOrWhiteSpace(searchModel.SearchTerm) && searchModel.CaptchaChecked && captchaVerified)
        {
            var url = $"/portal-empleo?busqueda={Uri.EscapeDataString(searchModel.SearchTerm)}";
            Navigation.NavigateTo(url);
        }
    }

    public class SearchModel
    {
        [Required(ErrorMessage = "Este campo es obligatorio")]
        public string SearchTerm { get; set; } = string.Empty;

        [Range(typeof(bool), "true", "true", ErrorMessage = "Debes completar la verificación humana")]
        public bool CaptchaChecked { get; set; }
    }

    public class EventoModel
    {
        public string EventName { get; set; } = string.Empty;
        public string Description { get; set; } = string.Empty;
        public string EventDate { get; set; } = string.Empty;
        public string ImageURL { get; set; } = string.Empty;
    }

    public class OfertaModel
    {
        public string OfferName { get; set; } = string.Empty;
        public string Description { get; set; } = string.Empty;
        public string ImageURL { get; set; } = string.Empty;
        public int Experience { get; set; }
        public double Salary { get; set; }
    }

    private List<CategoriaModel> categorias = new()
{
    new CategoriaModel { Titulo = "Desarrollo de Negocios", Puestos = 120, ImageUrl = "https://i.pinimg.com/1200x/1a/c9/25/1ac9253ba4768ccb45a1ef2d33ceb729.jpg" },
    new CategoriaModel { Titulo = "Atención al Cliente", Puestos = 370, ImageUrl = "https://i.pinimg.com/1200x/63/81/0d/63810d6fa154fbc0619ed63a804be28e.jpg" },
    new CategoriaModel { Titulo = "Marketing", Puestos = 743, ImageUrl = "https://i.pinimg.com/736x/f9/47/45/f94745921e7e5690f8de02aca6a353b7.jpg" },
    new CategoriaModel { Titulo = "Gestión de Producto", Puestos = 156, ImageUrl = "https://i.pinimg.com/736x/8b/6f/d1/8b6fd1da7cb3f0b7e9f7bceb5dd3a05d.jpg" },
    new CategoriaModel { Titulo = "Contabilidad", Puestos = 67, ImageUrl = "https://i.pinimg.com/1200x/b5/84/95/b5849532f8d1d05aaec70fb9d94b2739.jpg" },
    new CategoriaModel { Titulo = "Soporte Técnico", Puestos = 140, ImageUrl = "https://i.pinimg.com/736x/2d/e8/ee/2de8eee50ae28888289fd67b920895a0.jpg" }
};

    public class CategoriaModel
    {
        public string Titulo { get; set; } = string.Empty;
        public int Puestos { get; set; }
        public string ImageUrl { get; set; } = string.Empty;
    }
}
